//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace API_CuentasxCobrar
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class CXCEntitie : DbContext
    {
        public CXCEntitie()
            : base("name=CXCEntitie")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<AsientosContable> AsientosContables { get; set; }
        public virtual DbSet<Cliente> Clientes { get; set; }
        public virtual DbSet<TipoDocumento> TipoDocumentos { get; set; }
        public virtual DbSet<Transaccione> Transacciones { get; set; }
    
        public virtual ObjectResult<Clientes_consulta_Result> Clientes_consulta(Nullable<int> id_Cliente)
        {
            var id_ClienteParameter = id_Cliente.HasValue ?
                new ObjectParameter("id_Cliente", id_Cliente) :
                new ObjectParameter("id_Cliente", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Clientes_consulta_Result>("Clientes_consulta", id_ClienteParameter);
        }
    
        public virtual ObjectResult<Clientes_Edita_Result> Clientes_Edita(Nullable<int> id_Cliente, string nombre, string cedula, Nullable<decimal> limiteDeCredito)
        {
            var id_ClienteParameter = id_Cliente.HasValue ?
                new ObjectParameter("id_Cliente", id_Cliente) :
                new ObjectParameter("id_Cliente", typeof(int));
    
            var nombreParameter = nombre != null ?
                new ObjectParameter("Nombre", nombre) :
                new ObjectParameter("Nombre", typeof(string));
    
            var cedulaParameter = cedula != null ?
                new ObjectParameter("Cedula", cedula) :
                new ObjectParameter("Cedula", typeof(string));
    
            var limiteDeCreditoParameter = limiteDeCredito.HasValue ?
                new ObjectParameter("LimiteDeCredito", limiteDeCredito) :
                new ObjectParameter("LimiteDeCredito", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Clientes_Edita_Result>("Clientes_Edita", id_ClienteParameter, nombreParameter, cedulaParameter, limiteDeCreditoParameter);
        }
    
        public virtual int Clientes_elimina(Nullable<int> id_Cliente)
        {
            var id_ClienteParameter = id_Cliente.HasValue ?
                new ObjectParameter("id_Cliente", id_Cliente) :
                new ObjectParameter("id_Cliente", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Clientes_elimina", id_ClienteParameter);
        }
    
        public virtual ObjectResult<Clientes_insertar_Result> Clientes_insertar(string nombre, string cedula, Nullable<decimal> limiteDeCredito)
        {
            var nombreParameter = nombre != null ?
                new ObjectParameter("Nombre", nombre) :
                new ObjectParameter("Nombre", typeof(string));
    
            var cedulaParameter = cedula != null ?
                new ObjectParameter("Cedula", cedula) :
                new ObjectParameter("Cedula", typeof(string));
    
            var limiteDeCreditoParameter = limiteDeCredito.HasValue ?
                new ObjectParameter("LimiteDeCredito", limiteDeCredito) :
                new ObjectParameter("LimiteDeCredito", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Clientes_insertar_Result>("Clientes_insertar", nombreParameter, cedulaParameter, limiteDeCreditoParameter);
        }
    
        public virtual int Clientes_pagging(Nullable<int> pageIndex, Nullable<int> pageSize, string orderBy0, Nullable<bool> orderByDirection0, Nullable<int> id_Cliente, string nombre, string cedula)
        {
            var pageIndexParameter = pageIndex.HasValue ?
                new ObjectParameter("PageIndex", pageIndex) :
                new ObjectParameter("PageIndex", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            var orderBy0Parameter = orderBy0 != null ?
                new ObjectParameter("orderBy0", orderBy0) :
                new ObjectParameter("orderBy0", typeof(string));
    
            var orderByDirection0Parameter = orderByDirection0.HasValue ?
                new ObjectParameter("orderByDirection0", orderByDirection0) :
                new ObjectParameter("orderByDirection0", typeof(bool));
    
            var id_ClienteParameter = id_Cliente.HasValue ?
                new ObjectParameter("id_Cliente", id_Cliente) :
                new ObjectParameter("id_Cliente", typeof(int));
    
            var nombreParameter = nombre != null ?
                new ObjectParameter("Nombre", nombre) :
                new ObjectParameter("Nombre", typeof(string));
    
            var cedulaParameter = cedula != null ?
                new ObjectParameter("Cedula", cedula) :
                new ObjectParameter("Cedula", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Clientes_pagging", pageIndexParameter, pageSizeParameter, orderBy0Parameter, orderByDirection0Parameter, id_ClienteParameter, nombreParameter, cedulaParameter);
        }
    
        public virtual ObjectResult<TipoDocumentos_Consulta_Result> TipoDocumentos_Consulta(Nullable<int> id_TipoDocumento)
        {
            var id_TipoDocumentoParameter = id_TipoDocumento.HasValue ?
                new ObjectParameter("id_TipoDocumento", id_TipoDocumento) :
                new ObjectParameter("id_TipoDocumento", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<TipoDocumentos_Consulta_Result>("TipoDocumentos_Consulta", id_TipoDocumentoParameter);
        }
    
        public virtual ObjectResult<TipoDocumentos_edita_Result> TipoDocumentos_edita(Nullable<int> id_TipoDocumento, string descripcion, string cuentaContable)
        {
            var id_TipoDocumentoParameter = id_TipoDocumento.HasValue ?
                new ObjectParameter("id_TipoDocumento", id_TipoDocumento) :
                new ObjectParameter("id_TipoDocumento", typeof(int));
    
            var descripcionParameter = descripcion != null ?
                new ObjectParameter("Descripcion", descripcion) :
                new ObjectParameter("Descripcion", typeof(string));
    
            var cuentaContableParameter = cuentaContable != null ?
                new ObjectParameter("CuentaContable", cuentaContable) :
                new ObjectParameter("CuentaContable", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<TipoDocumentos_edita_Result>("TipoDocumentos_edita", id_TipoDocumentoParameter, descripcionParameter, cuentaContableParameter);
        }
    
        public virtual int TipoDocumentos_elimina(Nullable<int> id_TipoDocumento)
        {
            var id_TipoDocumentoParameter = id_TipoDocumento.HasValue ?
                new ObjectParameter("id_TipoDocumento", id_TipoDocumento) :
                new ObjectParameter("id_TipoDocumento", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("TipoDocumentos_elimina", id_TipoDocumentoParameter);
        }
    
        public virtual ObjectResult<TipoDocumentos_Inserta_Result> TipoDocumentos_Inserta(string descripcion, string cuentaContable)
        {
            var descripcionParameter = descripcion != null ?
                new ObjectParameter("Descripcion", descripcion) :
                new ObjectParameter("Descripcion", typeof(string));
    
            var cuentaContableParameter = cuentaContable != null ?
                new ObjectParameter("CuentaContable", cuentaContable) :
                new ObjectParameter("CuentaContable", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<TipoDocumentos_Inserta_Result>("TipoDocumentos_Inserta", descripcionParameter, cuentaContableParameter);
        }
    
        public virtual int TipoDocumentos_Paging(Nullable<int> pageIndex, Nullable<int> pageSize, string orderBy0, Nullable<bool> orderByDirection0, Nullable<int> id_TipoDocumento, string descripcion, string cuentaContable)
        {
            var pageIndexParameter = pageIndex.HasValue ?
                new ObjectParameter("PageIndex", pageIndex) :
                new ObjectParameter("PageIndex", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            var orderBy0Parameter = orderBy0 != null ?
                new ObjectParameter("orderBy0", orderBy0) :
                new ObjectParameter("orderBy0", typeof(string));
    
            var orderByDirection0Parameter = orderByDirection0.HasValue ?
                new ObjectParameter("orderByDirection0", orderByDirection0) :
                new ObjectParameter("orderByDirection0", typeof(bool));
    
            var id_TipoDocumentoParameter = id_TipoDocumento.HasValue ?
                new ObjectParameter("id_TipoDocumento", id_TipoDocumento) :
                new ObjectParameter("id_TipoDocumento", typeof(int));
    
            var descripcionParameter = descripcion != null ?
                new ObjectParameter("Descripcion", descripcion) :
                new ObjectParameter("Descripcion", typeof(string));
    
            var cuentaContableParameter = cuentaContable != null ?
                new ObjectParameter("CuentaContable", cuentaContable) :
                new ObjectParameter("CuentaContable", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("TipoDocumentos_Paging", pageIndexParameter, pageSizeParameter, orderBy0Parameter, orderByDirection0Parameter, id_TipoDocumentoParameter, descripcionParameter, cuentaContableParameter);
        }
    
        public virtual ObjectResult<Transacciones_Consulta_Result> Transacciones_Consulta(Nullable<int> id_Transaccion)
        {
            var id_TransaccionParameter = id_Transaccion.HasValue ?
                new ObjectParameter("id_Transaccion", id_Transaccion) :
                new ObjectParameter("id_Transaccion", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Transacciones_Consulta_Result>("Transacciones_Consulta", id_TransaccionParameter);
        }
    
        public virtual ObjectResult<Transacciones_Edita_Result> Transacciones_Edita(Nullable<int> id_Transaccion, string tipoDeMovimiento, Nullable<int> id_TipoDocumento, Nullable<int> numeroDeDocumento, Nullable<int> id_Cliente, Nullable<decimal> monto)
        {
            var id_TransaccionParameter = id_Transaccion.HasValue ?
                new ObjectParameter("id_Transaccion", id_Transaccion) :
                new ObjectParameter("id_Transaccion", typeof(int));
    
            var tipoDeMovimientoParameter = tipoDeMovimiento != null ?
                new ObjectParameter("TipoDeMovimiento", tipoDeMovimiento) :
                new ObjectParameter("TipoDeMovimiento", typeof(string));
    
            var id_TipoDocumentoParameter = id_TipoDocumento.HasValue ?
                new ObjectParameter("id_TipoDocumento", id_TipoDocumento) :
                new ObjectParameter("id_TipoDocumento", typeof(int));
    
            var numeroDeDocumentoParameter = numeroDeDocumento.HasValue ?
                new ObjectParameter("NumeroDeDocumento", numeroDeDocumento) :
                new ObjectParameter("NumeroDeDocumento", typeof(int));
    
            var id_ClienteParameter = id_Cliente.HasValue ?
                new ObjectParameter("id_Cliente", id_Cliente) :
                new ObjectParameter("id_Cliente", typeof(int));
    
            var montoParameter = monto.HasValue ?
                new ObjectParameter("Monto", monto) :
                new ObjectParameter("Monto", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Transacciones_Edita_Result>("Transacciones_Edita", id_TransaccionParameter, tipoDeMovimientoParameter, id_TipoDocumentoParameter, numeroDeDocumentoParameter, id_ClienteParameter, montoParameter);
        }
    
        public virtual int Transacciones_Elimina(Nullable<int> id_Transaccion)
        {
            var id_TransaccionParameter = id_Transaccion.HasValue ?
                new ObjectParameter("id_Transaccion", id_Transaccion) :
                new ObjectParameter("id_Transaccion", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Transacciones_Elimina", id_TransaccionParameter);
        }
    
        public virtual ObjectResult<Transacciones_insertar_Result> Transacciones_insertar(string tipoDeMovimiento, Nullable<int> id_TipoDocumento, Nullable<int> numeroDeDocumento, Nullable<int> id_Cliente, Nullable<decimal> monto)
        {
            var tipoDeMovimientoParameter = tipoDeMovimiento != null ?
                new ObjectParameter("TipoDeMovimiento", tipoDeMovimiento) :
                new ObjectParameter("TipoDeMovimiento", typeof(string));
    
            var id_TipoDocumentoParameter = id_TipoDocumento.HasValue ?
                new ObjectParameter("id_TipoDocumento", id_TipoDocumento) :
                new ObjectParameter("id_TipoDocumento", typeof(int));
    
            var numeroDeDocumentoParameter = numeroDeDocumento.HasValue ?
                new ObjectParameter("NumeroDeDocumento", numeroDeDocumento) :
                new ObjectParameter("NumeroDeDocumento", typeof(int));
    
            var id_ClienteParameter = id_Cliente.HasValue ?
                new ObjectParameter("id_Cliente", id_Cliente) :
                new ObjectParameter("id_Cliente", typeof(int));
    
            var montoParameter = monto.HasValue ?
                new ObjectParameter("Monto", monto) :
                new ObjectParameter("Monto", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Transacciones_insertar_Result>("Transacciones_insertar", tipoDeMovimientoParameter, id_TipoDocumentoParameter, numeroDeDocumentoParameter, id_ClienteParameter, montoParameter);
        }
    
        public virtual int Transaciones_Paging_Consulta(Nullable<int> pageIndex, Nullable<int> pageSize, string orderBy0, Nullable<bool> orderByDirection0, string tipoDeMovimiento, Nullable<int> id_TipoDocumento, string fecha_Desde, string fecha_Hasta)
        {
            var pageIndexParameter = pageIndex.HasValue ?
                new ObjectParameter("PageIndex", pageIndex) :
                new ObjectParameter("PageIndex", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            var orderBy0Parameter = orderBy0 != null ?
                new ObjectParameter("orderBy0", orderBy0) :
                new ObjectParameter("orderBy0", typeof(string));
    
            var orderByDirection0Parameter = orderByDirection0.HasValue ?
                new ObjectParameter("orderByDirection0", orderByDirection0) :
                new ObjectParameter("orderByDirection0", typeof(bool));
    
            var tipoDeMovimientoParameter = tipoDeMovimiento != null ?
                new ObjectParameter("TipoDeMovimiento", tipoDeMovimiento) :
                new ObjectParameter("TipoDeMovimiento", typeof(string));
    
            var id_TipoDocumentoParameter = id_TipoDocumento.HasValue ?
                new ObjectParameter("id_TipoDocumento", id_TipoDocumento) :
                new ObjectParameter("id_TipoDocumento", typeof(int));
    
            var fecha_DesdeParameter = fecha_Desde != null ?
                new ObjectParameter("Fecha_Desde", fecha_Desde) :
                new ObjectParameter("Fecha_Desde", typeof(string));
    
            var fecha_HastaParameter = fecha_Hasta != null ?
                new ObjectParameter("Fecha_Hasta", fecha_Hasta) :
                new ObjectParameter("Fecha_Hasta", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Transaciones_Paging_Consulta", pageIndexParameter, pageSizeParameter, orderBy0Parameter, orderByDirection0Parameter, tipoDeMovimientoParameter, id_TipoDocumentoParameter, fecha_DesdeParameter, fecha_HastaParameter);
        }
    
        public virtual int Usuario_Login(string username, string contrasena, ObjectParameter logeado, ObjectParameter mensaje)
        {
            var usernameParameter = username != null ?
                new ObjectParameter("username", username) :
                new ObjectParameter("username", typeof(string));
    
            var contrasenaParameter = contrasena != null ?
                new ObjectParameter("contrasena", contrasena) :
                new ObjectParameter("contrasena", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Usuario_Login", usernameParameter, contrasenaParameter, logeado, mensaje);
        }
    }
}
